management:
  security:
    enabled: false
  health:
    mongo:
      enabled: false

spring:
  application:
    name: NavianceLegacyApi
  profiles:
    # set to oauth2 when enabling auth
    active: oauth2,aws
  datasource:
    url: jdbc:mysql:replication://{{ cluster_address.value }},{{ reader_address.value }}/{{ naviance.database }}?zeroDateTimeBehavior=convertToNull
    username: {{ naviance.user }}
    password: {{ naviance.password }}
    driver-class-name: com.mysql.jdbc.ReplicationDriver
    test-on-borrow: true
    test-while-idle: true
    validation-query: /* ping */
    min-evictable-idle-time-millis: 60000
    validation-interval: 3000
    max-active: 100
    min-idle: 10
    max-idle: 100
  jpa:
    database: MYSQL
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: none
      dialect: org.hibernate.dialect.MySQL5Dialect

security:
  basic:
    # set to true when enabling oauth
    enabled: true
  sessions: stateless

oauth2:
  clientId: prod.legacyapi.1
  clientSecret: 69404032-5411-11e6-beb8-9e71128cae77
  checkTokenEndpointURL: https://oauth.naviance.com/oauth/check_token

logging:
  level.com.naviance: WARN
  file: /opt/naviance/legacyapi/logs/${spring.application.name}.log

cloud:
  aws:
    credentials:
      accessKey: AKIAIVZ2U2LMI5KXMJLA
      secretKey: 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
    region:
      static: us-east-1
    stack:
      auto: false
      
sqs:
  navianceCollegeVisitsQueueName: PROD_navianceVisitsQueue
  navianceSchoolSettingsQueueName: PROD_navianceSchoolSettingsQueue
  intersectCollegeVisitsQueueName: PROD_intersectVisitsQueue
