#!/usr/bin/env groovy
// Credential id name for AWS S3 access to obtain Jenkins config files.
def APP_NAME = "naviance-blue-ridge-api"
def APP_SUFFIX = ""
def DEPLOYMENT_APP = "tf-blue-ridge-api"
def upstreamProjectName = "Build-and-Deploy/${APP_NAME}-build"

// Credential id name for AWS S3 access to obtain Jenkins config files.
def AWS_DEV_CREDENTIAL_ID = 'unmanaged-jenkins-terraform'
def AWS_PROD_CREDENTIAL_ID = 'unmanaged-jenkins-terraform-prod'

def upstreamBuildNumber
def PHP_BUILD_VERSION_FILE = 'build/etc/phpversion.txt'
def XOR_HASH = 123456789

// Thanks https://stackoverflow.com/a/4244184/424301
Random random = new Random()
def captchaLeft = random.nextInt(12) + 1
def captchaRight = random.nextInt(12) + 1
def String captchaAnswer = (captchaLeft * captchaRight)
def captchaAnswerHash = ((captchaAnswer as Integer) ^ XOR_HASH).toString()

def captchaQuestion = """Solve CAPTCHA to apply production changes or to destroy anything:
What do you get when you multiply ${captchaLeft} by ${captchaRight}?
"""

properties([
    parameters([
        run(
          name: 'NAVIANCE_CODEDEPLOY_BUILD',
          projectName: upstreamProjectName,
          description: 'Successful Build to Deploy',
          filter:'SUCCESSFUL'
        ),
        choice(name: 'DEPLOYMENT_GROUP',
               description: 'CodeDeploy Deployment Group to target.',
               choices: [
                 "qa",
                 "staging",
                 "preprod",
                 "production",
               ].join("\n")),
        choice(name: 'DEPLOYMENT_CONFIGURATION',
               description: 'CodeDeploy Deployment Configuration to use.',
               choices: [
                 "Naviance.QuarterAtATime",
                 "CodeDeployDefault.HalfAtATime",
                 "CodeDeployDefault.OneAtATime",
                 "CodeDeployDefault.AllAtOnce",
               ].join("\n")),
        booleanParam(name: 'IgnoreApplicationStopFailure',
                    defaultValue: false,
                    description: "Ignore application stop failure in CodeDeploy?"),
        stringParam(name: 'captchaGuess',
                    defaultValue: '',
                    description: captchaQuestion),
        stringParam(name: 'captchaAnswerHash',
                    defaultValue: captchaAnswerHash,
                    description: "CAPTCHA answer hash (do not modify)"),
    ])
])

upstreamBuildNumber = "${env.NAVIANCE_CODEDEPLOY_BUILD}".split('/').last()
currentBuild.displayName = "#${BUILD_NUMBER}: deploy #${upstreamBuildNumber}â†’${DEPLOYMENT_APP}/${DEPLOYMENT_GROUP}"

stage('Checkout') {
  node {
    checkout scm
    sh 'git clean -fdx'

    // Thanks Stack Overflow https://stackoverflow.com/a/34321368/424301
    stash includes: 'bin/**,codedeploy/naviance-blue-ridge-api/**', name: 'src-cloud'
  }
}
stage('Create Deployment'){
  node {
    unstash 'src-cloud'
	def CREDENTIALS = ''
	if (DEPLOYMENT_GROUP ==~ /.*prod.*/) {
		CREDENTIALS = AWS_PROD_CREDENTIAL_ID
	} else {
		CREDENTIALS = AWS_DEV_CREDENTIAL_ID
	}
    withCredentials([
        usernamePassword(credentialsId: CREDENTIALS,
                         passwordVariable: 'AWS_SECRET_ACCESS_KEY',
                         usernameVariable: 'AWS_ACCESS_KEY_ID')
    ]) {
      sh """
        set -x
        bin/create-deployment.sh \
          "${NAVIANCE_CODEDEPLOY_BUILD}" \
          "${APP_NAME}" \
          "${APP_SUFFIX}" \
          "${DEPLOYMENT_APP}" \
          "${DEPLOYMENT_GROUP}" \
          "${DEPLOYMENT_CONFIGURATION}"\
          ""\
          "$IgnoreApplicationStopFailure"
      """
    }
  }
}
